name: Test and upload package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
      - '!v*-dev'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm test

  tagcheck:
    runs-on: ubuntu-latest
    needs: [test]
    # Note that for git tags this workflow triggers only on "vX.Y.Z":
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Get package version
        run: |
          ver=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=${ver}" >> $GITHUB_ENV
      - name: Check package version format
        # This fails e.g. if package.json's version contains a dev commits
        # suffix, since we don't want to push these to PyPI.
        run: |
          echo "${{ env.PACKAGE_VERSION }}" | grep -E -x '[0-9]+\.[0-9]+\.[0-9]+'
      - name: Check tag match
        # Verify that tag vX.Y.Z matches package version X.Y.Z.
        run: |
          test "${GITHUB_REF#refs/tags/v}" == "${{ env.PACKAGE_VERSION }}"

  upload:
    runs-on: ubuntu-latest
    needs: [tagcheck]
    if: |
      github.repository == 'ckreibich/communityid-js' &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: hooray
        run: echo yay

      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     registry-url: 'https://registry.npmjs.org'
      # - name: Publish NPM package
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
